{"version":3,"sources":["BlogPost.js","SearchBar.js","BlogArticle.js","BlogList.js","FrontPage.js","App.js","Login.js","serviceWorker.js","index.js"],"names":["BlogPost","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDeleteClick","event","preventDefault","console","log","state","id","deletePost","getHeader","bind","assertThisInitialized","title","author","description","comments","onItemClick","isAdmin","msg","_this2","fetch","method","then","httpResp","updatePosts","catch","onError","react_default","a","createElement","className","onClick","header","key","Component","SearchBar","onLoginClick","target","value","window","location","replace","onInputChange","setState","keyword","onSearchClick","type","onChange","BlogArticle","onEditClick","isEditing","onSubmitClick","isCreating","createNewPost","savePostEdit","onTextChange","name","content","create","changeMode","requestObj","userName","blogTitle","blogDescription","blogText","headers","Content-type","body","JSON","stringify","dataType","_this3","cols","rows","BlogList","blogObjects","posts","fetchBlogPostsByKeyword","clickedPost","findBlogPostById","mode","article","src_BlogArticle_0","updateBlogList","onCreateClick","fetchBlogPosts","buildBlogPosts","onSuccess","url","json","jsonObject","array","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","obj","push","err","return","postArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","src_BlogPost_0","foundPost","parseInt","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","b","renderObj","actionBar","src_SearchBar_0","FrontPage","printObj","src_BlogList_0","App","onSubmit","loggedIn","src_FrontPage_0","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b851331.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './BlogPost.css';\r\n\r\nclass BlogPost extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.onDeleteClick = this.onDeleteClick.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n\r\n        this.state = {\r\n            id : this.props.id,\r\n            title : this.props.title,\r\n            author : this.props.author,\r\n            description : this.props.description,\r\n            comments : 0,\r\n            onItemClick : this.props.onItemClick,\r\n            isAdmin: this.props.isAdmin\r\n        };\r\n    }\r\n\r\n    onError(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    onDeleteClick = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.id);\r\n        this.deletePost();\r\n    }\r\n\r\n    deletePost() {\r\n\r\n        fetch('http://localhost:8080/api/private/admin/delete/' + this.state.id, {\r\n            method: 'DELETE'\r\n        }).then((httpResp) => {\r\n            this.props.updatePosts();\r\n        }).catch(this.onError);\r\n\r\n    }\r\n\r\n    getHeader() {\r\n\r\n        if(this.state.isAdmin) {\r\n\r\n            return(\r\n                <div className=\"blog-header\">\r\n                        <div className=\"blog-title blog-text blog-title-admin\">{this.state.title}</div>\r\n                        <div className=\"blog-author blog-text blog-author-admin\">{this.state.author}</div>\r\n                        <div className=\"blog-delete\" onClick={this.onDeleteClick}>DEL</div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n        return(\r\n            <div className=\"blog-header\">\r\n                    <div className=\"blog-title blog-text\">{this.state.title}</div>\r\n                    <div className=\"blog-author blog-text\">{this.state.author}</div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let header = this.getHeader();\r\n\r\n        return(\r\n            <div className=\"blog-post\" key={this.state.id}>\r\n                {header}\r\n                <div className=\"blog-content\">\r\n                    <div className=\"blog-description blog-text\">{this.state.description}</div>\r\n                    <div className=\"blog-link-container\">\r\n                        <div id={this.state.id} className=\"blog-link blog-text\" onClick={this.state.onItemClick}>Read more...</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"blog-footer\">\r\n                    <div className=\"blog-comments blog-text\">Comments: {this.state.comments}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BlogPost;","import React, { Component } from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onLoginClick = this.onLoginClick.bind(this);\r\n\r\n        this.state = {\r\n            keyword : '',\r\n            onSearchClick : this.props.onSearchClick\r\n        };\r\n    }\r\n\r\n    onLoginClick = event => {\r\n        event.preventDefault();\r\n\r\n        if(event.target.value === 'login') {\r\n            window.location.replace('/login');\r\n        }\r\n    }\r\n\r\n    onInputChange = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({keyword : event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"header-container\">\r\n                <div className=\"login-button-container\">\r\n                    <button className=\"login-button-nav\" onClick={this.onLoginClick} value=\"login\">Login</button>\r\n                </div>\r\n                <div className=\"search-container\">\r\n                    <div className=\"search-input-container\">\r\n                        <input type=\"text\" className=\"input-search\" onChange={this.onInputChange}/>\r\n                    </div>\r\n                    <div className=\"search-button-container\">\r\n                        <button className=\"button-search\" onClick={this.state.onSearchClick} value={this.state.keyword}>Search</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport './BlogArticle.css';\r\n\r\nclass BlogArticle extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.onEditClick = this.onEditClick.bind(this);\r\n        this.onSubmitClick = this.onSubmitClick.bind(this);\r\n        this.onTextChange = this.onTextChange.bind(this);\r\n        this.savePostEdit = this.savePostEdit.bind(this);\r\n        this.createNewPost = this.createNewPost.bind(this);\r\n\r\n        if(this.props.create) {\r\n\r\n            this.state = {\r\n                id : -1,\r\n                title : '',\r\n                author : '',\r\n                description : '',\r\n                content : '',\r\n                changeMode : this.props.changeMode,\r\n                isAdmin : this.props.isAdmin,\r\n                isEditing : true,\r\n                updatePosts : this.props.updatePosts,\r\n                isCreating : true\r\n            };\r\n\r\n        } else {\r\n\r\n            this.state = {\r\n                id : this.props.id,\r\n                title : this.props.title,\r\n                author : this.props.author,\r\n                description : this.props.description,\r\n                content : this.props.content,\r\n                changeMode : this.props.changeMode,\r\n                isAdmin : this.props.isAdmin,\r\n                isEditing : false,\r\n                updatePosts : this.props.updatePosts\r\n            };\r\n\r\n        }\r\n    }\r\n\r\n    onEditClick = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({isEditing : true});\r\n    }\r\n\r\n    onSubmitClick = event => {\r\n        event.preventDefault();\r\n\r\n        if(this.state.isEditing && this.state.isCreating) {\r\n            this.createNewPost();\r\n        } else if(this.state.isEditing && !this.state.isCreating) {\r\n            this.savePostEdit();\r\n        }\r\n    }\r\n\r\n    onTextChange = event => {\r\n        event.preventDefault();\r\n\r\n        if(event.target.name === 'blog-title') {\r\n            this.setState({title : event.target.value});\r\n        } else if(event.target.name === 'blog-author') {\r\n            this.setState({author : event.target.value});\r\n        } else if(event.target.name === 'blog-content') {\r\n            this.setState({content : event.target.value});\r\n        } else if(event.target.name === 'blog-description') {\r\n            this.setState({description : event.target.value});\r\n        }\r\n        \r\n    }\r\n\r\n    onError(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    createNewPost() {\r\n\r\n        let requestObj = {\r\n            id : this.state.id,\r\n            userName : this.state.author,\r\n            blogTitle : this.state.title,\r\n            blogDescription : this.state.description,\r\n            blogText : this.state.content\r\n        };\r\n\r\n        fetch('http://localhost:8080/api/private/admin/add', {\r\n            method: 'POST',\r\n            headers: {'Content-type' : 'application/json'},\r\n            body: JSON.stringify(requestObj),\r\n            dataType: 'json'\r\n        }).then((httpResp) => {\r\n            console.log(httpResp);\r\n            this.state.updatePosts();\r\n            this.setState({isEditing : false, isCreating : false});\r\n        }).catch(this.onError);\r\n\r\n    }\r\n\r\n    savePostEdit() {\r\n\r\n        let requestObj = {\r\n            id : this.state.id,\r\n            userName : this.state.author,\r\n            blogTitle : this.state.title,\r\n            blogDescription : this.state.description,\r\n            blogText : this.state.content\r\n        };\r\n\r\n        fetch('http://localhost:8080/api/private/admin/edit', {\r\n            method: 'PUT',\r\n            headers: {'Content-type' : 'application/json'},\r\n            body: JSON.stringify(requestObj),\r\n            dataType: 'json'\r\n        }).then((httpResp) => {\r\n            console.log(httpResp);\r\n            this.state.updatePosts();\r\n            this.setState({isEditing : false});\r\n        }).catch(this.onError);\r\n\r\n    }\r\n\r\n    getHeader() {\r\n\r\n        if(this.state.isAdmin) {\r\n\r\n            if(this.state.isEditing) {\r\n\r\n                return(\r\n\r\n                    <div className=\"blog-article-header blog-text\">\r\n                        <div className=\"blog-article-title\"><input type=\"text\" name=\"blog-title\" value={this.state.title} onChange={this.onTextChange} /></div>\r\n                        <div className=\"blog-article-author\"><input type=\"text\" name=\"blog-author\" value={this.state.author} onChange={this.onTextChange} /></div>\r\n                        <div className=\"blog-article-submit\" onClick={this.onSubmitClick}>SUB<br />MIT</div>\r\n                    </div>\r\n    \r\n                );\r\n\r\n            }\r\n\r\n            return(\r\n\r\n                <div className=\"blog-article-header blog-text\">\r\n                    <div className=\"blog-article-title\">{this.state.title}</div>\r\n                    <div className=\"blog-article-author\">{this.state.author}</div>\r\n                    <div className=\"blog-article-edit\" onClick={this.onEditClick}>EDIT</div>\r\n                </div>\r\n\r\n            );\r\n\r\n        }\r\n\r\n\r\n        return(\r\n\r\n            <div className=\"blog-article-header blog-text\">\r\n                    <div className=\"blog-article-title\">{this.state.title}</div>\r\n                    <div className=\"blog-article-author\">{this.state.author}</div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let header = this.getHeader();\r\n\r\n        if(this.state.isEditing) {\r\n\r\n            return(\r\n\r\n                <div className=\"blog-article\">\r\n                    <div className=\"action-bar\">\r\n                        <div className=\"exit-link blog-text\" id=\"exit-article\" onClick={this.state.changeMode}>Back to browsing</div>\r\n                    </div>\r\n                    {header}\r\n                    <div className=\"blog-article-content blog-text\">\r\n                        <div className=\"blog-article-textarea-header\">Description</div>\r\n                        <textarea className=\"blog-article-description\" cols=\"\" rows=\"5\" name=\"blog-description\" value={this.state.description} onChange={this.onTextChange}></textarea>\r\n                        <div className=\"blog-article-textarea-header\">Content</div>\r\n                        <textarea className=\"blog-article-textarea\" cols=\"\" rows=\"30\" name=\"blog-content\" value={this.state.content} onChange={this.onTextChange}></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n\r\n        } else {\r\n            \r\n            return(\r\n                <div className=\"blog-article\">\r\n                    <div className=\"action-bar\">\r\n                        <div className=\"exit-link blog-text\" id=\"exit-article\" onClick={this.state.changeMode}>Back to browsing</div>\r\n                    </div>\r\n                    {header}\r\n                    <div className=\"blog-article-content blog-text\">{this.state.content}</div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default BlogArticle;","import React, {Component} from 'react';\r\nimport './BlogList.css';\r\nimport BlogPost from './BlogPost.js';\r\nimport SearchBar from './SearchBar.js';\r\nimport BlogArticle from './BlogArticle';\r\n\r\nclass BlogList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fetchBlogPosts = this.fetchBlogPosts.bind(this);\r\n        this.fetchBlogPostsByKeyword = this.fetchBlogPostsByKeyword.bind(this);\r\n        this.buildBlogPosts = this.buildBlogPosts.bind(this);\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onSearchClick = this.onSearchClick.bind(this);\r\n        this.onItemClick = this.onItemClick.bind(this);\r\n        this.changeMode = this.changeMode.bind(this);\r\n        this.updateBlogList = this.updateBlogList.bind(this);\r\n        this.onCreateClick = this.onCreateClick.bind(this);\r\n\r\n        this.state = {\r\n            url: 'http://localhost:8080/api/public/blogposts',\r\n            blogObjects : [],\r\n            posts : [],\r\n            mode : 'browse',\r\n            isAdmin: this.props.isAdmin\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateBlogList();\r\n    }\r\n\r\n    updateBlogList() {\r\n        this.setState({posts : [], blogObjects : []});\r\n        this.fetchBlogPosts();\r\n    }\r\n\r\n    fetchBlogPosts() {\r\n\r\n        fetch(this.state.url).then((httpResp) => httpResp.json()).then(this.onSuccess);\r\n\r\n    }\r\n\r\n    fetchBlogPostsByKeyword(keyword) {\r\n\r\n        fetch(this.state.url + '/search?keyword=' + keyword).then((httpResp) => httpResp.json()).then(this.onSuccess);\r\n\r\n    }\r\n\r\n    onSuccess(jsonObject) {\r\n            \r\n        let array = [];\r\n        \r\n        for(let obj of jsonObject) {\r\n            array.push(obj);\r\n        }\r\n\r\n        this.setState({blogObjects : array});\r\n        this.buildBlogPosts(array);\r\n    }\r\n\r\n    buildBlogPosts(postArray) {\r\n\r\n        let array = [];\r\n\r\n        for(let obj of postArray) {\r\n            array.push(<BlogPost isAdmin={this.state.isAdmin} id={obj.id} title={obj.blogTitle} author={obj.userName} description={obj.blogDescription} onItemClick={this.onItemClick} updatePosts={this.updateBlogList} />);\r\n        }\r\n\r\n        this.setState({posts : array});\r\n    }\r\n\r\n    onSearchClick = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({blogObjects : [], posts : []});\r\n\r\n        this.fetchBlogPostsByKeyword(event.target.value);\r\n    }\r\n    \r\n    findBlogPostById(id) {\r\n\r\n        let foundPost = null;\r\n\r\n        id = parseInt(id);\r\n\r\n        for(let b of this.state.blogObjects) {\r\n            if(b.id === id) {\r\n                foundPost = b;\r\n            }\r\n        }\r\n\r\n        return foundPost;\r\n    }\r\n\r\n    onItemClick = event => {\r\n        event.preventDefault();\r\n\r\n        let clickedPost = this.findBlogPostById(event.target.id);\r\n\r\n        this.setState({mode : 'read', article : <BlogArticle isAdmin={this.state.isAdmin} id={clickedPost.id} title={clickedPost.blogTitle} author={clickedPost.userName} description={clickedPost.blogDescription} content={clickedPost.blogText} changeMode={this.changeMode} updatePosts={this.updateBlogList} />});\r\n    }\r\n\r\n    onCreateClick = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({mode : 'create', article : <BlogArticle isAdmin={this.state.isAdmin} changeMode={this.changeMode} updatePosts={this.updateBlogList} create={true} />});\r\n    }\r\n\r\n    changeMode = event => {\r\n        event.preventDefault();\r\n\r\n        if(event.target.id === 'exit-article') {\r\n            this.setState({mode : 'browse'});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('BlogList render()');\r\n        console.log(this.state.isAdmin);\r\n\r\n        let renderObj = this.state.posts;\r\n\r\n        if(this.state.mode === 'read' || this.state.mode === 'create') {\r\n            renderObj = this.state.article;\r\n        }\r\n\r\n        let actionBar = <div className=\"blog-list-action-bar\" onClick={this.onCreateClick}>CREATE POST</div>;\r\n\r\n        if(this.state.isAdmin) {\r\n\r\n            if(this.state.mode === 'read' || this.state.mode === 'create') {\r\n\r\n                return(\r\n                    <div className=\"blog-container\">\r\n                    <SearchBar onSearchClick={this.onSearchClick} />\r\n                    {renderObj}\r\n                    </div>\r\n                );\r\n\r\n            }\r\n\r\n            return(\r\n                <div className=\"blog-container\">\r\n                <SearchBar onSearchClick={this.onSearchClick} />\r\n                {actionBar}\r\n                {renderObj}\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n        return(\r\n            <div className=\"blog-container\">\r\n            <SearchBar onSearchClick={this.onSearchClick} />\r\n            {renderObj}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BlogList;","import React, { Component } from 'react';\r\nimport './FrontPage.css';\r\nimport BlogList from './BlogList.js';\r\nimport BlogArticle from './BlogArticle.js';\r\n\r\nclass FrontPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {mode : 'browse', isAdmin: this.props.isAdmin};\r\n    }\r\n\r\n    render() {\r\n        console.log('Frontpage render()');\r\n        let printObj = null;\r\n\r\n        if(this.state.mode === 'read') {\r\n            printObj = <BlogArticle />;\r\n        } else if(this.state.mode === 'browse') {\r\n            printObj = <BlogList isAdmin={this.state.isAdmin}/>\r\n        }\r\n\r\n        return (\r\n        <div className=\"page-container\">\r\n            <div className=\"left-sidebar\"></div>\r\n            {printObj}\r\n            <div className=\"right-sidebar\"></div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FrontPage;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport FrontPage from './FrontPage.js';\r\nimport Login from './Login.js';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      loggedIn : true\r\n    };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({loggedIn : true});\r\n  }\r\n\r\n  render() {\r\n\r\n    let renderObj = <FrontPage isAdmin={false} />;\r\n\r\n    if(this.state.loggedIn) {\r\n      renderObj = <FrontPage isAdmin={true} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {renderObj}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React, { Component } from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            onSubmit : this.props.onSubmit\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"page-container\">\r\n                <div className=\"login-dialog\">\r\n\r\n                    <div className=\"login-header\">\r\n                        <h1>Login</h1>\r\n                    </div>\r\n\r\n                    <div className=\"input-container\">\r\n\r\n                        <table className=\"input-grid\">\r\n                            <tbody>\r\n                                <tr className=\"input-row\">\r\n                                    <td><label className=\"input-label\">Username:</label></td>\r\n                                    <td><input className=\"input-field\" type=\"text\" name=\"username\" /></td>\r\n                                </tr>\r\n                                <tr className=\"input-row\">\r\n                                    <td><label className=\"input-label\">Password:</label></td>\r\n                                    <td><input className=\"input-field\" type=\"password\" name=\"password\" /></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div className=\"submit-input\">\r\n                            <button className=\"login-button\" onClick={this.state.onSubmit}>Login</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}