{"version":3,"sources":["BlogPost.js","SearchBar.js","Comments.js","BlogArticle.js","Login.js","SignUp.js","BlogList.js","FrontPage.js","App.js","serviceWorker.js","index.js"],"names":["BlogPost","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDeleteClick","event","preventDefault","deletePost","getHeader","bind","assertThisInitialized","state","id","title","author","description","commentsLength","onItemClick","userDetails","msg","console","log","_this2","fetch","method","headers","Authorization","concat","token","then","httpResp","updatePosts","catch","onError","role","react_default","a","createElement","className","onClick","header","key","Component","SearchBar","onInputChange","setState","keyword","target","value","onSearchClick","type","onChange","Comments","deleteComment","comments","divComments","_this3","map","comment","text","BlogArticle","onEditClick","isEditing","onSubmitClick","isCreating","createNewPost","savePostEdit","onPostCommentClick","saveComment","onTextChange","name","content","blogComment","addComment","create","changeMode","requestObj","userName","blogTitle","blogDescription","blogText","Content-type","body","JSON","stringify","dataType","_this4","cols","rows","_this5","tempComments","findCommentsByBlogPostId","src_Comments","Login","handleChange","username","password","onSubmit","undefined","onLogin","SignUp","confirmPassword","onSignUp","BlogList","blogObjects","posts","fetchBlogPostsByKeyword","clickedPost","findBlogPostById","mode","article","src_BlogArticle_0","updateBlogList","onCreateClick","goToLogin","doLogout","loginActions","handleLogout","goToSignUp","fetchBlogPosts","buildBlogPosts","onSuccess","getLoginButton","url","isLoading","json","jsonObject","array","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","obj","push","err","return","postArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","src_BlogPost_0","length","foundPost","parseInt","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","b","action","btn","renderObj","src_Login_0","tryLogin","src_SignUp","trySignUp","actionBar","src_SearchBar_0","FrontPage","src_BlogList_0","App","anonUser","roles","handleLogin","loggedIn","localStorage","getItem","user","credentials","setItem","accessToken","jwt","removeItem","newUser","src_FrontPage_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a329b3b3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './BlogPost.css';\r\n\r\nclass BlogPost extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.onDeleteClick = this.onDeleteClick.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n\r\n        this.state = {\r\n            id : this.props.id,\r\n            title : this.props.title,\r\n            author : this.props.author,\r\n            description : this.props.description,\r\n            commentsLength : this.props.commentsLength,\r\n            onItemClick : this.props.onItemClick,\r\n            userDetails : this.props.userDetails\r\n        };\r\n    }\r\n\r\n    onError(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    onDeleteClick = event => {\r\n        event.preventDefault();\r\n        this.deletePost();\r\n    }\r\n\r\n    deletePost() {\r\n\r\n        fetch('http://localhost:8080/api/private/admin/delete/' + this.state.id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: `Bearer ${this.state.userDetails.token}`\r\n            }\r\n        }).then((httpResp) => {\r\n            this.props.updatePosts();\r\n        }).catch(this.onError);\r\n\r\n    }\r\n\r\n    getHeader() {\r\n\r\n        if(this.state.userDetails.role === 'ROLE_ADMIN') {\r\n\r\n            return(\r\n                <div className=\"blog-header\">\r\n                        <div className=\"blog-title blog-text blog-title-admin\">{this.state.title}</div>\r\n                        <div className=\"blog-author blog-text blog-author-admin\">{this.state.author}</div>\r\n                        <div className=\"blog-delete\" onClick={this.onDeleteClick}>DEL</div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n        return(\r\n            <div className=\"blog-header\">\r\n                    <div className=\"blog-title blog-text\">{this.state.title}</div>\r\n                    <div className=\"blog-author blog-text\">{this.state.author}</div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let header = this.getHeader();\r\n\r\n        return(\r\n            <div className=\"blog-post\" key={this.state.id}>\r\n                {header}\r\n                <div className=\"blog-content\">\r\n                    <div className=\"blog-description blog-text\">{this.state.description}</div>\r\n                    <div className=\"blog-link-container\">\r\n                        <div id={this.state.id} className=\"blog-link blog-text\" onClick={this.state.onItemClick}>Read more...</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"blog-footer\">\r\n                    <div className=\"blog-comments blog-text\">Comments: {this.state.commentsLength}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BlogPost;","import React, { Component } from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n\r\n        this.state = {\r\n            keyword : '',\r\n            onSearchClick : this.props.onSearchClick\r\n        };\r\n    }\r\n\r\n    onInputChange = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({keyword : event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"header-container\">\r\n                <div className=\"search-container\">\r\n                    <div className=\"search-input-container\">\r\n                        <input type=\"text\" className=\"input-search\" onChange={this.onInputChange}/>\r\n                    </div>\r\n                    <div className=\"search-button-container\">\r\n                        <button className=\"button-search\" onClick={this.state.onSearchClick} value={this.state.keyword}>Search</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport './BlogArticle.css';\r\n\r\nclass Comments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onDeleteClick = this.onDeleteClick.bind(this);\r\n        this.deleteComment = this.deleteComment.bind(this);\r\n\r\n        this.state = {\r\n            comments: this.props.comments,\r\n            updatePosts: this.props.updatePosts,\r\n            userDetails: this.props.userDetails\r\n        }\r\n    }\r\n\r\n    onDeleteClick = event => {\r\n        event.preventDefault();\r\n        this.deleteComment(event.target.id);\r\n    }\r\n\r\n    deleteComment(id) {\r\n        fetch('http://localhost:8080/api/private/admin/delete/comment/' + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: `Bearer ${this.state.userDetails.token}`\r\n            }\r\n        }).then((httpResp) => {\r\n            this.state.updatePosts();\r\n        }).catch(this.onError);\r\n    }\r\n\r\n    onError(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    render() {\r\n        let comments = this.state.comments\r\n        let divComments;\r\n\r\n        if (this.state.userDetails.role === 'ROLE_ADMIN') {\r\n            divComments = comments.map((comment) => {\r\n                return  <div className=\"blog-article-content blog-text\">{comment.text}\r\n                            <div className=\"blog-delete-comment\" onClick={this.onDeleteClick} id={comment.id} >DEL</div>\r\n                        </div>\r\n                })\r\n        } else {\r\n            divComments = comments.map((comment) => {\r\n                return  <div className=\"blog-article-content blog-text\">{comment.text}\r\n                        </div>\r\n                })\r\n        }\r\n\r\n\r\n   \r\n        return <div>{divComments}</div>\r\n    }\r\n}\r\n\r\nexport default Comments;\r\n","import React, { Component } from 'react';\r\nimport './BlogArticle.css';\r\nimport Comments from './Comments';\r\n\r\nclass BlogArticle extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getHeader = this.getHeader.bind(this);\r\n        this.onEditClick = this.onEditClick.bind(this);\r\n        this.onSubmitClick = this.onSubmitClick.bind(this);\r\n        this.onTextChange = this.onTextChange.bind(this);\r\n        this.savePostEdit = this.savePostEdit.bind(this);\r\n        this.saveComment = this.saveComment.bind(this);\r\n        this.createNewPost = this.createNewPost.bind(this);\r\n        this.addComment = this.addComment.bind(this);\r\n\r\n        if(this.props.create) {\r\n\r\n            this.state = {\r\n                id : -1,\r\n                title : '',\r\n                author : '',\r\n                description : '',\r\n                content : '',\r\n                changeMode : this.props.changeMode,\r\n                userDetails : this.props.userDetails,\r\n                isEditing : true,\r\n                updatePosts : this.props.updatePosts,\r\n                isCreating : true,\r\n                blogComment : ''\r\n            };\r\n\r\n        } else {\r\n\r\n            this.state = {\r\n                id : this.props.id,\r\n                title : this.props.title,\r\n                author : this.props.author,\r\n                description : this.props.description,\r\n                content : this.props.content,\r\n                changeMode : this.props.changeMode,\r\n                userDetails : this.props.userDetails,\r\n                isEditing : false,\r\n                updatePosts : this.props.updatePosts,\r\n                blogComment : ''\r\n            };\r\n\r\n        }\r\n    }\r\n\r\n    onEditClick = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({isEditing : true});\r\n    }\r\n\r\n    onSubmitClick = event => {\r\n        event.preventDefault();\r\n\r\n        if(this.state.isEditing && this.state.isCreating) {\r\n            this.createNewPost();\r\n        } else if(this.state.isEditing && !this.state.isCreating) {\r\n            this.savePostEdit();\r\n        }\r\n    }\r\n\r\n    onPostCommentClick = event => {\r\n      event.preventDefault();\r\n      this.saveComment();\r\n    }\r\n\r\n    onTextChange = event => {\r\n        event.preventDefault();\r\n\r\n        if(event.target.name === 'blog-title') {\r\n            this.setState({title : event.target.value});\r\n        } else if(event.target.name === 'blog-author') {\r\n            this.setState({author : event.target.value});\r\n        } else if(event.target.name === 'blog-content') {\r\n            this.setState({content : event.target.value});\r\n        } else if(event.target.name === 'blog-description') {\r\n            this.setState({description : event.target.value});\r\n        } else if(event.target.name === 'blog-comment') {\r\n          this.setState({blogComment : event.target.value});\r\n      }\r\n        \r\n    }\r\n\r\n    onError(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    createNewPost() {\r\n\r\n        let requestObj = {\r\n            id : this.state.id,\r\n            userName : this.state.author,\r\n            blogTitle : this.state.title,\r\n            blogDescription : this.state.description,\r\n            blogText : this.state.content\r\n        };\r\n\r\n        fetch('http://localhost:8080/api/private/admin/add', {\r\n            method: 'POST',\r\n            headers: {\r\n              Authorization: `Bearer ${this.state.userDetails.token}`,\r\n              'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(requestObj),\r\n            dataType: 'json'\r\n        }).then((httpResp) => {\r\n            this.state.updatePosts();\r\n            this.setState({isEditing : false, isCreating : false});\r\n        }).catch(this.onError);\r\n\r\n    }\r\n\r\n    savePostEdit() {\r\n\r\n        let requestObj = {\r\n            id : this.state.id,\r\n            userName : this.state.author,\r\n            blogTitle : this.state.title,\r\n            blogDescription : this.state.description,\r\n            blogText : this.state.content\r\n        };\r\n\r\n        fetch('http://localhost:8080/api/private/admin/edit', {\r\n            method: 'PUT',\r\n            headers: {\r\n              Authorization: `Bearer ${this.state.userDetails.token}`,\r\n              'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(requestObj),\r\n            dataType: 'json'\r\n        }).then((httpResp) => {\r\n            this.state.updatePosts();\r\n            this.setState({isEditing : false});\r\n        }).catch(this.onError);\r\n\r\n    }\r\n\r\n    saveComment() {\r\n\r\n      let requestObj = {\r\n        id: this.state.id,\r\n        text: this.state.blogComment\r\n      };\r\n      fetch('http://localhost:8080/api/private/user/comment', {\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization: `Bearer ${this.state.userDetails.token}`,\r\n            'Content-type' : 'application/json'\r\n        },\r\n        body: JSON.stringify(requestObj),\r\n        dataType: 'json'\r\n      }).then((httpResp) => {\r\n        this.state.updatePosts();\r\n        this.setState({blogComment: ''});\r\n      }).catch(this.onError);\r\n    }\r\n\r\n    getHeader() {\r\n\r\n        if(this.state.userDetails.role === 'ROLE_ADMIN') {\r\n\r\n            if(this.state.isEditing) {\r\n\r\n                return(\r\n\r\n                    <div className=\"blog-article-header blog-text\">\r\n                        <div className=\"blog-article-title\"><input type=\"text\" name=\"blog-title\" value={this.state.title} onChange={this.onTextChange} /></div>\r\n                        <div className=\"blog-article-author\"><input type=\"text\" name=\"blog-author\" value={this.state.author} onChange={this.onTextChange} /></div>\r\n                        <div className=\"blog-article-submit\" onClick={this.onSubmitClick}>SUB<br />MIT</div>\r\n                    </div>\r\n    \r\n                );\r\n\r\n            }\r\n\r\n            return(\r\n\r\n                <div className=\"blog-article-header blog-text\">\r\n                    <div className=\"blog-article-title\">{this.state.title}</div>\r\n                    <div className=\"blog-article-author\">{this.state.author}</div>\r\n                    <div className=\"blog-article-edit\" onClick={this.onEditClick}>EDIT</div>\r\n                </div>\r\n\r\n            );\r\n\r\n        }\r\n\r\n\r\n        return(\r\n\r\n            <div className=\"blog-article-header blog-text\">\r\n                    <div className=\"blog-article-title\">{this.state.title}</div>\r\n                    <div className=\"blog-article-author\">{this.state.author}</div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    addComment() {\r\n\r\n        if (this.state.userDetails.role === 'ROLE_USER' || this.state.userDetails.role === 'ROLE_ADMIN') {\r\n            return (\r\n                <div>\r\n                  <div className=\"blog-article-content blog-text\">\r\n                    <div className=\"blog-article-textarea-header\">Write a comment\r\n                      <div className=\"blog-comment-send\" onClick={this.onPostCommentClick}>SEND</div>\r\n                    </div>\r\n                    <textarea className=\"blog-article-comment\" cols=\"\" rows=\"5\" name=\"blog-comment\" value={this.state.blogComment}\r\n                      onChange={this.onTextChange}></textarea>\r\n                  </div>\r\n                </div>\r\n              );\r\n        }\r\n\r\n        return <div>Login to comment</div>\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let tempComments = this.props.findCommentsByBlogPostId(this.state.id);\r\n\r\n        let header = this.getHeader();\r\n        let addComment = this.addComment();\r\n\r\n        if(this.state.isEditing) {\r\n\r\n            return(\r\n\r\n                <div className=\"blog-article\">\r\n                    <div className=\"action-bar\">\r\n                        <div className=\"exit-link blog-text\" onClick={() => this.state.changeMode('exit-article')}>Back to browsing</div>\r\n                    </div>\r\n                    {header}\r\n                    <div className=\"blog-article-content blog-text\">\r\n                        <div className=\"blog-article-textarea-header\">Description</div>\r\n                        <textarea className=\"blog-article-description\" cols=\"\" rows=\"5\" name=\"blog-description\" value={this.state.description} onChange={this.onTextChange}></textarea>\r\n                        <div className=\"blog-article-textarea-header\">Content</div>\r\n                        <textarea className=\"blog-article-textarea\" cols=\"\" rows=\"30\" name=\"blog-content\" value={this.state.content} onChange={this.onTextChange}></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n\r\n        } else {\r\n            \r\n            return(\r\n              <div>\r\n                <div className=\"blog-article\">\r\n                    <div className=\"action-bar\">\r\n                        <div className=\"exit-link blog-text\" onClick={() => this.state.changeMode('exit-article')}>Back to browsing</div>\r\n                    </div>\r\n                    {header}\r\n                    <div className=\"blog-article-content blog-text\">{this.state.content}</div>\r\n                </div>\r\n                <div>\r\n                  {addComment}\r\n                </div>\r\n                <div>\r\n                  <Comments comments={tempComments} updatePosts={this.state.updatePosts} userDetails={this.state.userDetails}/>\r\n                </div>\r\n              </div>\r\n            );\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default BlogArticle;","import React, { Component } from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        event.preventDefault();\r\n\r\n        if(event.target.name === 'username') {\r\n            this.setState({username : event.target.value});\r\n        } else if(event.target.name === 'password') {\r\n            this.setState({password : event.target.value});\r\n        }\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if(this.props.changeMode !== undefined) {\r\n            this.props.changeMode('do-login');\r\n        }\r\n\r\n        this.props.onLogin(this.state.username, this.state.password);\r\n    }\r\n\r\n    onError(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"page-container\">\r\n                <div className=\"login-dialog\">\r\n\r\n                    <div className=\"login-header\">\r\n                        <h1>Login</h1>\r\n                    </div>\r\n\r\n                    <div className=\"input-container\">\r\n\r\n                        <table className=\"input-grid\">\r\n                            <tbody>\r\n                                <tr className=\"input-row\">\r\n                                    <td><label className=\"input-label\">Username:</label></td>\r\n                                    <td><input className=\"input-field\" type=\"text\" name=\"username\" onChange={this.handleChange} value={this.state.username} /></td>\r\n                                </tr>\r\n                                <tr className=\"input-row\">\r\n                                    <td><label className=\"input-label\">Password:</label></td>\r\n                                    <td><input className=\"input-field\" type=\"password\" name=\"password\" onChange={this.handleChange} value={this.state.password} /></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div className=\"submit-input\">\r\n                            <button className=\"login-button\" onClick={this.onSubmit}>Login</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if(this.state.password === this.state.confirmPassword) {\r\n            this.props.onSignUp(this.state.username, this.state.password); \r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        event.preventDefault();\r\n\r\n        switch(event.target.name) {\r\n            case 'username':\r\n                this.setState({username : event.target.value});\r\n                break;\r\n\r\n            case 'password':\r\n                this.setState({password : event.target.value});\r\n                break;\r\n\r\n            case 'confirm_password':\r\n                this.setState({confirmPassword : event.target.value});\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"page-container\">\r\n                <div className=\"login-dialog\">\r\n\r\n                    <div className=\"login-header\">\r\n                        <h1>Sign Up</h1>\r\n                    </div>\r\n\r\n                    <div className=\"input-container\">\r\n\r\n                        <table className=\"input-grid\">\r\n                            <tbody>\r\n                                <tr className=\"input-row\">\r\n                                    <td><label className=\"input-label\">Username:</label></td>\r\n                                    <td><input className=\"input-field\" type=\"text\" name=\"username\" onChange={this.handleChange} value={this.state.username} /></td>\r\n                                </tr>\r\n                                <tr className=\"input-row\">\r\n                                    <td><label className=\"input-label\">Password:</label></td>\r\n                                    <td><input className=\"input-field\" type=\"password\" name=\"password\" onChange={this.handleChange} value={this.state.password} /></td>\r\n                                </tr>\r\n                                <tr className=\"input-row\">\r\n                                    <td><label className=\"input-label\">Confirm password:</label></td>\r\n                                    <td><input className=\"input-field\" type=\"password\" name=\"confirm_password\" onChange={this.handleChange} value={this.state.confirmPassword} /></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div className=\"submit-input\">\r\n                            <button className=\"login-button\" onClick={this.onSubmit}>Sign up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SignUp;","import React, {Component} from 'react';\r\nimport './BlogList.css';\r\nimport BlogPost from './BlogPost.js';\r\nimport SearchBar from './SearchBar.js';\r\nimport BlogArticle from './BlogArticle';\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\n\r\nclass BlogList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fetchBlogPosts = this.fetchBlogPosts.bind(this);\r\n        this.fetchBlogPostsByKeyword = this.fetchBlogPostsByKeyword.bind(this);\r\n        this.buildBlogPosts = this.buildBlogPosts.bind(this);\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onSearchClick = this.onSearchClick.bind(this);\r\n        this.onItemClick = this.onItemClick.bind(this);\r\n        this.changeMode = this.changeMode.bind(this);\r\n        this.updateBlogList = this.updateBlogList.bind(this);\r\n        this.onCreateClick = this.onCreateClick.bind(this);\r\n        this.getLoginButton = this.getLoginButton.bind(this);\r\n        this.findCommentsByBlogPostId = this.findCommentsByBlogPostId.bind(this);\r\n\r\n        this.state = {\r\n            url: 'http://localhost:8080/api/public/blogposts',\r\n            blogObjects : [],\r\n            posts : [],\r\n            mode : 'browse',\r\n            userDetails : this.props.userDetails,\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateBlogList();\r\n    }\r\n\r\n    updateBlogList() {\r\n        this.setState({posts : [], blogObjects : [], isLoading: true});\r\n        this.fetchBlogPosts();\r\n    }\r\n\r\n    fetchBlogPosts() {\r\n        fetch(this.state.url).then((httpResp) => httpResp.json()).then(this.onSuccess);\r\n\r\n    }\r\n\r\n    fetchBlogPostsByKeyword(keyword) {\r\n\r\n        fetch(this.state.url + '/search?keyword=' + keyword).then((httpResp) => httpResp.json()).then(this.onSuccess);\r\n\r\n    }\r\n\r\n    onSuccess(jsonObject) {\r\n\r\n        let array = [];\r\n        \r\n        for(let obj of jsonObject) {\r\n            array.push(obj);\r\n        }\r\n\r\n        this.buildBlogPosts(array);\r\n    }\r\n\r\n    buildBlogPosts(postArray) {\r\n\r\n        let array = [];\r\n\r\n        for(let obj of postArray) {\r\n            array.push(<BlogPost userDetails={this.state.userDetails} id={obj.id} title={obj.blogTitle} author={obj.userName} description={obj.blogDescription} onItemClick={this.onItemClick} updatePosts={this.updateBlogList} commentsLength={obj.comments.length} />);\r\n        }\r\n\r\n        this.setState({posts : array, blogObjects : postArray, isLoading: false});\r\n    }\r\n\r\n    onSearchClick = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({blogObjects : [], posts : []});\r\n\r\n        this.fetchBlogPostsByKeyword(event.target.value);\r\n    }\r\n    \r\n    findBlogPostById(id) {\r\n\r\n        let foundPost = null;\r\n\r\n        id = parseInt(id);\r\n\r\n        for(let b of this.state.blogObjects) {\r\n            if(b.id === id) {\r\n                foundPost = b;\r\n            }\r\n        }\r\n\r\n        return foundPost;\r\n    }\r\n\r\n    findCommentsByBlogPostId(id) {\r\n        let blogPost;\r\n        if (id === -1) {\r\n            return null;\r\n        }\r\n        blogPost = this.findBlogPostById(id);\r\n        return blogPost.comments;\r\n    }\r\n\r\n    onItemClick = event => {\r\n        event.preventDefault();\r\n\r\n\r\n        let clickedPost = this.findBlogPostById(event.target.id);\r\n\r\n        this.setState({mode : 'read', article : <BlogArticle userDetails={this.state.userDetails} id={clickedPost.id} title={clickedPost.blogTitle} \r\n        author={clickedPost.userName} description={clickedPost.blogDescription} content={clickedPost.blogText} changeMode={this.changeMode} \r\n        updatePosts={this.updateBlogList} findCommentsByBlogPostId={this.findCommentsByBlogPostId}/>});\r\n    }\r\n\r\n    onCreateClick = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({mode : 'create', article : <BlogArticle userDetails={this.state.userDetails} changeMode={this.changeMode} updatePosts={this.updateBlogList} create={true} findCommentsByBlogPostId={this.findCommentsByBlogPostId} />});\r\n    }\r\n\r\n    changeMode(action) {\r\n\r\n        if(action === 'exit-article' || action === 'do-login') {\r\n            this.setState({mode : 'browse'});\r\n        }\r\n    }\r\n\r\n    goToLogin = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({mode : 'login'});\r\n    }\r\n\r\n    doLogout = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.loginActions.handleLogout();\r\n    }\r\n\r\n    getLoginButton() {\r\n\r\n        let btn = <div className=\"blog-login-button\" onClick={this.goToLogin.bind(this)}>LOG<br />IN</div>;\r\n\r\n        if(this.state.userDetails.role === 'ROLE_ADMIN' || this.state.userDetails.role === 'ROLE_USER') {\r\n            btn = <div className=\"blog-login-button\" onClick={this.doLogout.bind(this)}>LOG<br />OUT</div>;\r\n        }\r\n\r\n        return btn;\r\n    }\r\n\r\n    goToSignUp = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({mode: 'sign-up'});\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.state.isLoading) {\r\n                \r\n            let renderObj = this.state.posts;\r\n\r\n        if(this.state.mode === 'read' || this.state.mode === 'create') {\r\n            renderObj = this.state.article;\r\n        } else if(this.state.mode === 'login') {\r\n            return(\r\n                <div className='blog-container'>\r\n                    <Login onLogin={this.props.loginActions.tryLogin} changeMode={this.changeMode} />\r\n                </div>\r\n            );\r\n        } else if(this.state.mode === 'sign-up') {\r\n            return(\r\n                <div className='blog-container'>\r\n                    <SignUp onSignUp={this.props.loginActions.trySignUp} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let actionBar = <div className=\"blog-list-action-bar\" onClick={this.onCreateClick}>CREATE POST</div>;\r\n\r\n        if(this.state.userDetails.role === 'ROLE_ADMIN') {\r\n\r\n                if(this.state.mode === 'read' || this.state.mode === 'create') {\r\n\r\n                    return(\r\n                        <div className=\"blog-container\">\r\n                        <div className=\"blog-action-button-container\">\r\n                            {this.getLoginButton()}\r\n                        </div>\r\n                        <SearchBar onSearchClick={this.onSearchClick} />\r\n                        {renderObj}\r\n                        </div>\r\n                    );\r\n\r\n                }\r\n\r\n                return(\r\n                    <div className=\"blog-container\">\r\n                    <div className=\"blog-action-button-container\">\r\n                        {this.getLoginButton()}\r\n                    </div>\r\n                    <SearchBar onSearchClick={this.onSearchClick} />\r\n                    {actionBar}\r\n                    {renderObj}\r\n                    </div>\r\n                );\r\n\r\n            } else if(this.state.userDetails.role === 'ROLE_USER') {\r\n                return(\r\n                    <div className=\"blog-container\">\r\n                    <div className=\"blog-action-button-container\">\r\n                        {this.getLoginButton()}\r\n                    </div>\r\n                    <SearchBar onSearchClick={this.onSearchClick} />\r\n                    {renderObj}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return(\r\n                <div className=\"blog-container\">\r\n                <div className=\"blog-action-button-container\">\r\n                    {this.getLoginButton()}\r\n                    <div className=\"blog-sign-up-button\" onClick={this.goToSignUp.bind(this)}>SIGN<br />UP</div>\r\n                </div>\r\n                <SearchBar onSearchClick={this.onSearchClick} />\r\n                {renderObj}\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default BlogList;","import React, { Component } from 'react';\r\nimport './FrontPage.css';\r\nimport BlogList from './BlogList.js';\r\n\r\nclass FrontPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mode : 'browse', \r\n            userDetails: this.props.userDetails\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n        <div className=\"page-container\">\r\n            <div className=\"left-sidebar\"></div>\r\n            <BlogList userDetails={this.state.userDetails} loginActions={this.props.loginActions} />\r\n            <div className=\"right-sidebar\"></div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FrontPage;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport FrontPage from './FrontPage.js';\r\nimport Login from './Login.js';\r\n\r\nclass App extends Component {\r\n\r\n  anonUser = {\r\n    roles: [\r\n      'ANYNOMOUS'\r\n    ],\r\n    token: ''\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.tryLogin = this.tryLogin.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.trySignUp = this.trySignUp.bind(this);\r\n\r\n    this.state = {\r\n      loggedIn : true,\r\n      isLoading : false,\r\n      userDetails: {},\r\n      loginActions: {\r\n        tryLogin: this.tryLogin,\r\n        handleLogout: this.handleLogout,\r\n        trySignUp: this.trySignUp\r\n      } \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let jwt = localStorage.getItem('accessToken');\r\n\r\n    if(jwt) {\r\n      this.handleLogin();\r\n    }\r\n  }\r\n\r\n  tryLogin(username, password) {\r\n\r\n    let user = {\r\n        userName: username,\r\n        password: password\r\n    };\r\n\r\n    fetch('http://localhost:8080/api/auth/login', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {'Content-type': 'application/json'},\r\n        body: JSON.stringify(user),\r\n        dataType: 'json'\r\n    }).then((httpResp) => httpResp.json())\r\n        .then((jsonObject) => {\r\n            localStorage.setItem('accessToken', jsonObject.accessToken);\r\n            this.handleLogin();\r\n        })\r\n        .catch(this.onError);\r\n\r\n  }\r\n\r\n  handleLogin() {\r\n    const jwt = localStorage.getItem('accessToken');\r\n\r\n    this.setState({isLoading : true});\r\n    fetch('http://localhost:8080/api/auth/users/details', {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`\r\n      }\r\n    }).then((httpResp) => httpResp.json())\r\n        .then((jsonObject) => {\r\n          jsonObject.user.token = jwt;\r\n          this.setState({loggedIn: true, userDetails: jsonObject.user, isLoading : false});\r\n        })\r\n        .catch((msg) => {\r\n          console.log(msg);\r\n          this.setState({loggedIn: false, userDetails: this.anonUser, isLoading : false});\r\n        });\r\n\r\n  }\r\n\r\n  handleLogout(changeMode) {\r\n\r\n    this.setState({loggedIn: false, userDetails: this.anonUser}, () => {\r\n      localStorage.removeItem('accessToken');\r\n      this.handleLogin();\r\n    });\r\n\r\n  }\r\n\r\n  trySignUp(username, password) {\r\n\r\n    let newUser = {\r\n      userName: username,\r\n      password: password\r\n    }\r\n\r\n    fetch('http://localhost:8080/api/auth/register', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {'Content-type': 'application/json'},\r\n      body: JSON.stringify(newUser),\r\n      dataType: 'json'\r\n    }).then((httpResp) => {\r\n      this.tryLogin(username, password);\r\n    }).catch((msg) => {\r\n      console.log(msg);\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if(!this.state.isLoading) {\r\n      return (\r\n        <div className=\"App\">\r\n          <FrontPage userDetails={this.state.userDetails} loginActions={this.state.loginActions} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}