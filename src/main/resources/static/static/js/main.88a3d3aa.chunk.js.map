{"version":3,"sources":["BlogPost.js","SearchBar.js","BlogArticle.js","BlogList.js","FrontPage.js","App.js","Login.js","serviceWorker.js","index.js"],"names":["BlogPost","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","title","author","description","comments","onItemClick","react_default","a","createElement","className","key","onClick","Component","SearchBar","onInputChange","event","preventDefault","setState","keyword","target","value","bind","assertThisInitialized","onSearchClick","type","onChange","BlogArticle","content","changeMode","BlogList","blogObjects","posts","fetchBlogPostsByKeyword","clickedPost","findBlogPostById","mode","article","src_BlogArticle_0","blogTitle","userName","blogText","fetchBlogPosts","buildBlogPosts","onSuccess","url","fetch","then","httpResp","json","jsonObject","array","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","obj","push","err","return","postArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","src_BlogPost_0","blogDescription","foundPost","parseInt","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","b","renderObj","src_SearchBar_0","FrontPage","printObj","src_BlogList_0","App","onSubmit","loggedIn","src_FrontPage_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88a3d3aa.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './BlogPost.css';\r\n\r\nclass BlogPost extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id : this.props.id,\r\n            title : this.props.title,\r\n            author : this.props.author,\r\n            description : this.props.description,\r\n            comments : 0,\r\n            onItemClick : this.props.onItemClick\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"blog-post\" key={this.state.id}>\r\n                <div className=\"blog-header\">\r\n                    <div className=\"blog-title blog-text\">{this.state.title}</div>\r\n                    <div className=\"blog-author blog-text\">{this.state.author}</div>\r\n                </div>\r\n                <div className=\"blog-content\">\r\n                    <div className=\"blog-description blog-text\">{this.state.description}</div>\r\n                    <div className=\"blog-link-container\">\r\n                        <div id={this.state.id} className=\"blog-link blog-text\" onClick={this.state.onItemClick}>Read more...</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"blog-footer\">\r\n                    <div className=\"blog-comments blog-text\">Comments: {this.state.comments}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BlogPost;","import React, { Component } from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n\r\n        this.state = {\r\n            keyword : '',\r\n            onSearchClick : this.props.onSearchClick\r\n        };\r\n    }\r\n\r\n    onInputChange = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({keyword : event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"search-container\">\r\n                <div className=\"search-input-container\">\r\n                    <input type=\"text\" className=\"input-search\" onChange={this.onInputChange}/>\r\n                </div>\r\n                <div className=\"search-button-container\">\r\n                    <button className=\"button-search\" onClick={this.state.onSearchClick} value={this.state.keyword}>Search</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport './BlogArticle.css';\r\n\r\nclass BlogArticle extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title : this.props.title,\r\n            author : this.props.author,\r\n            content : this.props.content,\r\n            changeMode : this.props.changeMode\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"blog-article\">\r\n                <div className=\"action-bar\">\r\n                    <div className=\"exit-link\" id=\"exit-article\" onClick={this.state.changeMode}>Back to browsing</div>\r\n                </div>\r\n                <div className=\"blog-article-header blog-text\">\r\n                    <div className=\"blog-article-title\">{this.state.title}</div>\r\n                    <div className=\"blog-article-author\">{this.state.author}</div>\r\n                </div>\r\n                <div className=\"blog-article-content blog-text\">{this.state.content}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BlogArticle;","import React, {Component} from 'react';\r\nimport './BlogList.css';\r\nimport BlogPost from './BlogPost.js';\r\nimport SearchBar from './SearchBar.js';\r\nimport BlogArticle from './BlogArticle';\r\n\r\nclass BlogList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.fetchBlogPosts = this.fetchBlogPosts.bind(this);\r\n        this.fetchBlogPostsByKeyword = this.fetchBlogPostsByKeyword.bind(this);\r\n        this.buildBlogPosts = this.buildBlogPosts.bind(this);\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onSearchClick = this.onSearchClick.bind(this);\r\n        this.onItemClick = this.onItemClick.bind(this);\r\n        this.changeMode = this.changeMode.bind(this);\r\n\r\n        this.state = {\r\n            url: 'http://localhost:8080/blogposts',\r\n            blogObjects : [],\r\n            posts : [],\r\n            mode : 'browse'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchBlogPosts();\r\n    }\r\n\r\n    fetchBlogPosts() {\r\n\r\n        fetch(this.state.url).then((httpResp) => httpResp.json()).then(this.onSuccess);\r\n\r\n    }\r\n\r\n    fetchBlogPostsByKeyword(keyword) {\r\n\r\n        fetch(this.state.url + '/search?keyword=' + keyword).then((httpResp) => httpResp.json()).then(this.onSuccess);\r\n\r\n    }\r\n\r\n    onSuccess(jsonObject) {\r\n            \r\n        let array = [];\r\n        \r\n        for(let obj of jsonObject) {\r\n            array.push(obj);\r\n        }\r\n\r\n        this.setState({blogObjects : array});\r\n        this.buildBlogPosts(array);\r\n    }\r\n\r\n    buildBlogPosts(postArray) {\r\n\r\n        let array = [];\r\n\r\n        for(let obj of postArray) {\r\n            array.push(<BlogPost id={obj.id} title={obj.blogTitle} author={obj.userName} description={obj.blogDescription} onItemClick={this.onItemClick} />);\r\n        }\r\n\r\n        this.setState({posts : array});\r\n    }\r\n\r\n    onSearchClick = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({blogObjects : [], posts : []});\r\n\r\n        this.fetchBlogPostsByKeyword(event.target.value);\r\n    }\r\n    \r\n    findBlogPostById(id) {\r\n\r\n        let foundPost = null;\r\n\r\n        id = parseInt(id);\r\n\r\n        for(let b of this.state.blogObjects) {\r\n            if(b.id === id) {\r\n                foundPost = b;\r\n            }\r\n        }\r\n\r\n        return foundPost;\r\n    }\r\n\r\n    onItemClick = event => {\r\n        event.preventDefault();\r\n\r\n        let clickedPost = this.findBlogPostById(event.target.id);\r\n\r\n        this.setState({mode : 'read', article : <BlogArticle title={clickedPost.blogTitle} author={clickedPost.userName} content={clickedPost.blogText} changeMode={this.changeMode} />});\r\n    }\r\n\r\n    changeMode = event => {\r\n        event.preventDefault();\r\n\r\n        if(event.target.id === 'exit-article') {\r\n            this.setState({mode : 'browse'});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let renderObj = this.state.posts;\r\n\r\n        if(this.state.mode === 'read') {\r\n            renderObj = this.state.article;\r\n        }\r\n\r\n        return(\r\n            <div className=\"blog-container\">\r\n            <SearchBar onSearchClick={this.onSearchClick} />\r\n            {renderObj}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BlogList;","import React, { Component } from 'react';\r\nimport './FrontPage.css';\r\nimport BlogList from './BlogList.js';\r\nimport BlogArticle from './BlogArticle.js';\r\n\r\nclass FrontPage extends Component {\r\n\r\n    state = {mode : 'browse'};\r\n\r\n    render() {\r\n        let printObj = null;\r\n\r\n        if(this.state.mode === 'read') {\r\n        printObj = <BlogArticle />;\r\n        } else if(this.state.mode === 'browse') {\r\n        printObj = <BlogList />\r\n        }\r\n\r\n        return (\r\n        <div className=\"page-container\">\r\n            <div className=\"left-sidebar\"></div>\r\n            {printObj}\r\n            <div className=\"right-sidebar\"></div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FrontPage;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport FrontPage from './FrontPage.js';\r\nimport Login from './Login.js';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {loggedIn : false};\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({loggedIn : true});\r\n  }\r\n\r\n  render() {\r\n\r\n    // let renderObj = <Login onSubmit={this.onSubmit} />\r\n    let renderObj = <FrontPage />\r\n\r\n    if(this.state.loggedIn) {\r\n      renderObj = <FrontPage />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {renderObj}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React, { Component } from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            onSubmit : this.props.onSubmit\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"page-container\">\r\n                <div className=\"login-dialog\">\r\n\r\n                    <div className=\"login-header\">\r\n                        <h1>Login</h1>\r\n                    </div>\r\n\r\n                    <div className=\"input-container\">\r\n\r\n                        <table className=\"input-grid\">\r\n                            <tbody>\r\n                                <tr className=\"input-row\">\r\n                                    <td><label className=\"input-label\">Username:</label></td>\r\n                                    <td><input className=\"input-field\" type=\"text\" name=\"username\" /></td>\r\n                                </tr>\r\n                                <tr className=\"input-row\">\r\n                                    <td><label className=\"input-label\">Password:</label></td>\r\n                                    <td><input className=\"input-field\" type=\"password\" name=\"password\" /></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div className=\"submit-input\">\r\n                            <button className=\"login-button\" onClick={this.state.onSubmit}>Login</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}